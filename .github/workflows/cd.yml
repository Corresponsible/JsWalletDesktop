name: Create Release
on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      # - name: Install Snapcraft
      #   # uses: samuelmeuli/action-snapcraft@v1
      #   # Only install Snapcraft on Ubuntu
      #   if: startsWith(matrix.os, 'ubuntu')
      #   run: sudo snap install snapcraft --classic
      #   # with:
      #     # Log in to Snap Store
      #     # snapcraft_token: ${{ secrets.snapcraft_token }}

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }} # Automatically generated
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          # build_script_name: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - id: md5file
        run: $output=(node ./scripts/calc-md5.js)
        Write-Output "::set-output name=md5file::$output"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.md5file.outputs.md5file }}
          asset_name: ${{ steps.md5file.outputs.md5file }}
          asset_content_type: plain/text
