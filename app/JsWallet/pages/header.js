// Generated by LiveScript 1.6.0
(function(){
  var react, projectLinks, menuFuncs, getPrimaryInfo, getLang, icon, loading, navigate, setupPages, icons;
  react = require('react');
  projectLinks = require('./project-links.js');
  menuFuncs = require('../menu-funcs.js');
  getPrimaryInfo = require('../get-primary-info.js');
  getLang = require('../get-lang.js');
  icon = require('./icon.js');
  loading = require('./loading.js');
  navigate = require('../navigate.js');
  setupPages = require('../setup-pages.js');
  icons = require('../icons.js');
  module.exports = function(store, web3){
    var ref$, current, openAccount, lock, walletStyle, info, activateS1, activateS2, activateS3, switchNetwork, refresh, style, wallets, search, settings, filestorage, staking, resources, stakingActive, delegateActive, infoActive, menuStyle, iconStyle, iconStyle2, lang, syncing, borderStyle, logoStyle, expandCollapse, langsMenuBody, lockIcon, walletIcon, commingSoon, iconNode, textStyle, gotoSettings, gotoSearch, wallet, gotoStaking, gotoChooseStaker, gotoInfo, openSubmenu, menuStaking, menuOut, hideMenu, showMenu, showClass, show, children;
    if (store == null || in$(store.current.page, setupPages)) {
      return null;
    }
    ref$ = menuFuncs(store, web3t), current = ref$.current, openAccount = ref$.openAccount, lock = ref$.lock, walletStyle = ref$.walletStyle, info = ref$.info, activateS1 = ref$.activateS1, activateS2 = ref$.activateS2, activateS3 = ref$.activateS3, switchNetwork = ref$.switchNetwork, refresh = ref$.refresh, lock = ref$.lock;
    style = getPrimaryInfo(store);
    wallets = store.current.page === 'wallets' ? 'active' : 'not-active';
    search = store.current.page === 'search' ? 'active' : 'not-active';
    settings = store.current.page === 'settings' ? 'active' : 'not-active';
    filestorage = store.current.page === 'filestorage' ? 'active' : 'not-active';
    staking = store.current.page === 'staking' ? 'active' : 'not-active';
    resources = store.current.page === 'resources' ? 'active' : 'not-active';
    stakingActive = store.current.page === 'staking' ? 'active' : 'not-active';
    delegateActive = store.current.page === 'validators' ? 'active' : 'not-active';
    infoActive = store.current.page === 'info' ? 'active' : 'not-active';
    menuStyle = {
      color: style.app.text
    };
    iconStyle = {
      color: style.app.icon
    };
    iconStyle2 = {
      color: style.app.icon,
      float: "left",
      opacity: "0",
      marginLeft: "60px"
    };
    lang = getLang(store);
    info = getPrimaryInfo(store);
    syncing = (function(){
      switch (false) {
      case !store.current.refreshing:
        return "syncing";
      default:
        return "";
      }
    }());
    borderStyle = {
      borderBottom: "1px solid " + style.app.border,
      background: style.app.header
    };
    logoStyle = {
      filter: style.app.filterLogo
    };
    expandCollapse = function(){
      return store.current.langsOpen = !store.current.langsOpen;
    };
    langsMenuBody = {
      border: "1px solid " + style.app.border,
      background: style.app.header
    };
    lockIcon = {
      width: "14px"
    };
    walletIcon = {
      width: "18px"
    };
    commingSoon = {
      opacity: ".3",
      cursor: "no-drop"
    };
    iconNode = {
      position: "inherit",
      verticalAlign: "sub",
      width: "12px",
      height: "12px",
      paddingRight: "10px"
    };
    textStyle = {
      color: style.app.text
    };
    gotoSettings = function(){
      return navigate(store, web3t, 'settings');
    };
    gotoSearch = function(){
      return navigate(store, web3t, 'search');
    };
    wallet = function(){
      return navigate(store, web3t, 'wallets');
    };
    gotoStaking = function(){
      return navigate(store, web3t, 'staking');
    };
    gotoChooseStaker = function(){
      return navigate(store, web3t, 'validators');
    };
    gotoInfo = function(){
      return navigate(store, web3t, 'info');
    };
    openSubmenu = function(){
      return store.current.submenu = !store.current.submenu;
    };
    menuStaking = store.current.submenu ? 'submenu' : '';
    menuOut = function(){
      return store.current.submenu = false;
    };
    staking = store.current.submenu ? 'active' : 'not-active';
    hideMenu = function(){
      return store.menu.mobile = !store.menu.mobile;
    };
    showMenu = store.menu.mobile ? 'show' : "";
    showClass = store.menu.show ? 'show' : "";
    show = function(){
      return store.menu.show = !store.menu.show;
    };
    return react.createElement('div', {
      style: borderStyle,
      className: showMenu + " menu menu1682449790"
    }, children = [
      react.createElement('div', {
        className: 'logo'
      }, children = react.createElement('img', {
        src: info.branding.logoSm + "",
        style: logoStyle
      })), store.preference.lockVisible === true ? store.current.device === 'mobile' ? react.createElement('div', {
        onClick: show,
        style: iconStyle,
        className: showClass + " menu-item menu-btn"
      }, children = react.createElement('img', {
        src: icons.menu + "",
        style: lockIcon
      })) : void 8 : void 8, store.preference.lockVisible === true ? store.current.device === 'mobile' ? react.createElement('div', {
        onClick: lock,
        style: iconStyle,
        className: 'menu-item locked'
      }, children = react.createElement('img', {
        src: icons.lock + "",
        style: lockIcon
      })) : void 8 : void 8
    ]);
  };
  function in$(x, xs){
    var i = -1, l = xs.length >>> 0;
    while (++i < l) if (x === xs[i]) return true;
    return false;
  }
}).call(this);
