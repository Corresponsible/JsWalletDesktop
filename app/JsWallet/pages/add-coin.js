// Generated by LiveScript 1.6.0
(function(){
  var react, ref$, map, filter, loading2, web3, getPrimaryInfo, getLang, icon, icons, get, createItem, filterItem, addByAddress, addByVlxaddress;
  react = require('react');
  ref$ = require('prelude-ls'), map = ref$.map, filter = ref$.filter;
  loading2 = require('./loading2.ls');
  web3 = require('../web3.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  getLang = require('../get-lang.ls');
  icon = require('./icon.ls');
  icons = require('../icons.ls');
  get = require('../../web3t/providers/superagent.ls').get;
  createItem = curry$(function(arg$, item){
    var store, web3t, add, title, style, buttonStyle, background, menuStyle, children;
    store = arg$.store, web3t = arg$.web3t;
    add = function(){
      store.current.addCoin = false;
      return web3t.installQuick(item, function(){});
    };
    title = item.name + "";
    style = getPrimaryInfo(store);
    buttonStyle = {
      border: "1px solid " + style.app.text,
      color: style.app.text
    };
    background = {
      background: style.app.input
    };
    menuStyle = {
      color: style.app.text
    };
    return react.createElement('div', {
      style: background,
      className: 'item'
    }, children = [
      react.createElement('img', {
        src: item.image + ""
      }), react.createElement('span', {
        style: menuStyle,
        className: 'title'
      }, ' ' + title), react.createElement('button', {
        onClick: add,
        style: buttonStyle
      }, children = icon('Plus', 20))
    ]);
  });
  filterItem = function(store){
    return function(item){
      var ref$;
      if (((ref$ = store.current.filterPlugins) != null ? ref$ : "").length === 0) {
        return true;
      }
      return ((ref$ = item.token) != null ? ref$ : "").indexOf(store.current.filterPlugins) > -1;
    };
  };
  addByAddress = function(store, web3t){
    var coinContract, notFound, add, style, buttonStyle, inputStyle, ercBg, background, children;
    coinContract = function(e){
      return store.contractAddress = e.target.value;
    };
    notFound = function(){
      store.contractAddress = "Not Found";
      return setTimeout(function(){
        return store.contractAddress = "";
      }, 1000);
    };
    add = function(){
      return get("https://registry.web3.space/token/" + store.contractAddress).end(function(err, data){
        var ref$;
        if (err != null || ((ref$ = data.body) != null ? ref$.token : void 8) == null) {
          return notFound();
        }
        return web3t.installQuick(data.body, function(){
          return store.current.addCoin = false;
        });
      });
    };
    style = getPrimaryInfo(store);
    buttonStyle = {
      border: "1px solid " + style.app.text,
      color: style.app.text
    };
    inputStyle = {
      color: style.app.text,
      background: style.app.bgPrimaryLight,
      border: "0"
    };
    ercBg = {
      background: style.app.bgPrimaryLight
    };
    background = {
      background: style.app.input
    };
    return react.createElement('div', {
      style: background,
      className: 'item'
    }, children = [
      react.createElement('img', {
        src: icons.erc20Token + "",
        style: ercBg
      }), react.createElement('input', {
        placeholder: "0x....",
        value: store.contractAddress + "",
        onChange: coinContract,
        style: inputStyle,
        className: 'search'
      }), react.createElement('button', {
        onClick: add,
        style: buttonStyle
      }, children = icon('Plus', 20))
    ]);
  };
  addByVlxaddress = function(store, web3t){
    var coinContract, notFound, add, style, buttonStyle, inputStyle, ercBg, background, children;
    coinContract = function(e){
      return store.contractVlxaddress = e.target.value;
    };
    notFound = function(){
      store.contractVlxaddress = "Not Found";
      return setTimeout(function(){
        return store.contractVlxaddress = "";
      }, 1000);
    };
    add = function(){
      return get("https://registry.web3.space/token/" + store.contractVlxaddress).end(function(err, data){
        var ref$;
        if (err != null || ((ref$ = data.body) != null ? ref$.token : void 8) == null) {
          return notFound();
        }
        return web3t.installQuick(data.body, function(){
          return store.current.addVlxcoin = false;
        });
      });
    };
    style = getPrimaryInfo(store);
    buttonStyle = {
      border: "1px solid " + style.app.text,
      color: style.app.text
    };
    inputStyle = {
      color: style.app.text,
      background: style.app.bgPrimaryLight,
      border: "0"
    };
    ercBg = {
      background: style.app.bgPrimaryLight
    };
    background = {
      background: style.app.input
    };
    return react.createElement('div', {
      style: background,
      className: 'item'
    }, children = [
      react.createElement('img', {
        src: icons.vlxIcon + "",
        style: ercBg
      }), react.createElement('input', {
        placeholder: "V....",
        value: store.contractVlxaddress + "",
        onChange: coinContract,
        style: inputStyle,
        className: 'search'
      }), react.createElement('button', {
        onClick: add,
        style: buttonStyle
      }, children = icon('Plus', 20))
    ]);
  };
  module.exports = function(arg$){
    var store, web3t, close, filterRegistery, style, accountBodyStyle, color, lang, inputStyle, children;
    store = arg$.store, web3t = arg$.web3t;
    if (store.current.addCoin !== true) {
      return null;
    }
    close = function(){
      return store.current.addCoin = false;
    };
    filterRegistery = function(event){
      return store.current.filterPlugins = event.target.value;
    };
    style = getPrimaryInfo(store);
    accountBodyStyle = {
      background: style.app.background,
      backgroundColor: style.app.bgspare,
      color: style.app.text
    };
    color = {
      color: style.app.text
    };
    lang = getLang(store);
    inputStyle = {
      color: style.app.text,
      background: style.app.input,
      border: "0"
    };
    return react.createElement('div', {
      className: 'manage-account manage-account366755008'
    }, children = react.createElement('div', {
      style: accountBodyStyle,
      className: 'account-body'
    }, children = [
      react.createElement('div', {
        style: color,
        className: 'title'
      }, children = [
        react.createElement('div', {}, children = [
          react.createElement('div', {}, ' ' + lang.yourWallets), react.createElement('div', {
            onClick: close,
            className: 'closed'
          }, children = icon('X', 20))
        ]), react.createElement('div', {
          className: 'search-content'
        }, children = [
          react.createElement('input', {
            placeholder: lang.search + "",
            onChange: filterRegistery,
            style: inputStyle,
            className: 'search'
          }), react.createElement('div', {
            className: 'icon'
          }, children = icon('Search', 15))
        ])
      ]), react.createElement('div', {
        className: 'settings'
      }, children = react.createElement('div', {
        className: 'section'
      }, children = react.createElement('div', {
        className: 'list'
      }, children = store.registry.length > -1
        ? map(createItem({
          store: store,
          web3t: web3t
        }))(
        filter(filterItem(store))(
        store.registry))
        : react.createElement('div', {
          className: 'loading'
        }, children = loading2('black')))))
    ]));
  };
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
