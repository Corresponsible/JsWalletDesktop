// Generated by LiveScript 1.6.0
(function(){
  var react, wallet, ref$, map, take, drop, filter, menu, web3, walletsFuncs, manageAccount, tokenMigration, addCoinPage, getLang, getPrimaryInfo, history, yourAccount, icon, localStorage, icons;
  react = require('react');
  wallet = require('./wallet.js');
  ref$ = require('prelude-ls'), map = ref$.map, take = ref$.take, drop = ref$.drop, filter = ref$.filter;
  menu = require('./menu.js');
  web3 = require('../web3.js');
  walletsFuncs = require('../wallets-funcs.js');
  manageAccount = require('./manage-account.js');
  tokenMigration = require('./token-migration.js');
  addCoinPage = require('./add-coin.js');
  getLang = require('../get-lang.js');
  getPrimaryInfo = require('../get-primary-info.js');
  history = require('./history.js');
  yourAccount = require('./your-account.js');
  icon = require('./icon.js');
  localStorage = require('localStorage');
  icons = require('../icons.js');
  module.exports = function(store, web3t){
    var ref$, wallets, goUp, canUp, goDown, canDown, style, lang, borderStyle, headerStyle, input, iconColor, icon2, icon3, headerLeft, borderRight, openAccount, openMenu, editAccountName, defaultAccountName, editAccount, doneEdit, cancelEditAccountName, currentAccountName, accountName, rotateClass, showClass, viewAccountTemplate, editAccountTemplate, chosenAccountTemplate, children;
    if (store.current.account == null) {
      return null;
    }
    ref$ = walletsFuncs(store, web3t), wallets = ref$.wallets, goUp = ref$.goUp, canUp = ref$.canUp, goDown = ref$.goDown, canDown = ref$.canDown;
    style = getPrimaryInfo(store);
    lang = getLang(store);
    borderStyle = {
      borderTop: "1px solid " + style.app.border
    };
    headerStyle = {
      borderTop: "1px solid " + style.app.border,
      padding: "17px 0px 20px",
      color: style.app.text,
      textAlign: "left"
    };
    input = {
      background: style.app.wallet,
      border: "1px solid " + style.app.border,
      color: style.app.text
    };
    iconColor = {
      filter: style.app.iconFilter
    };
    icon2 = {
      filter: style.app.icon2
    };
    icon3 = {
      filter: style.app.icon3
    };
    headerLeft = {
      marginLeft: "10px"
    };
    borderRight = {
      borderRight: "1px solid " + style.app.border
    };
    openAccount = function(){
      return store.current.switchAccount = !store.current.switchAccount;
    };
    openMenu = function(){
      return store.current.openMenu = !store.current.openMenu;
    };
    editAccountName = function(){
      return store.current.editAccountName = currentAccountName();
    };
    defaultAccountName = function(){
      return "Account " + store.current.accountIndex;
    };
    editAccount = function(e){
      return store.current.editAccountName = e.target.value;
    };
    doneEdit = function(){
      localStorage.setItem(defaultAccountName(), store.current.editAccountName);
      return cancelEditAccountName();
    };
    cancelEditAccountName = function(){
      return store.current.editAccountName = "";
    };
    currentAccountName = function(){
      var ref$;
      return (ref$ = localStorage.getItem(defaultAccountName())) != null
        ? ref$
        : defaultAccountName();
    };
    accountName = currentAccountName();
    rotateClass = store.current.switchAccount ? 'rotate' : "";
    showClass = store.current.openMenu ? 'show' : "";
    viewAccountTemplate = function(){
      var children;
      return react.createElement('div', {
        className: showClass + " switch-account h1"
      }, children = [
        react.createElement('span', {
          onClick: openAccount,
          className: 'name'
        }, ' ' + accountName), react.createElement('span', {
          onClick: editAccountName,
          className: 'icon'
        }, children = react.createElement('img', {
          src: icons.create + "",
          style: icon2,
          className: 'icon-svg-edit'
        })), react.createElement('span', {
          onClick: openAccount,
          className: rotateClass + " icon"
        }, children = react.createElement('img', {
          src: icons.arrowDown + "",
          style: icon3,
          className: 'icon-svg-create'
        })), react.createElement('span', {
          onClick: openMenu,
          className: showClass + " icon menus"
        }, children = react.createElement('img', {
          src: icons.menu + "",
          style: iconColor,
          className: 'icon-svg-create'
        }))
      ]);
    };
    editAccountTemplate = function(){
      var children;
      return react.createElement('div', {
        className: 'switch-account h1'
      }, children = [
        react.createElement('input', {
          value: store.current.editAccountName + "",
          onChange: editAccount,
          style: input,
          className: 'h1'
        }), react.createElement('span', {
          onClick: doneEdit,
          className: 'ckeck icon'
        }, children = icon("Check", 20)), react.createElement('span', {
          onClick: cancelEditAccountName,
          className: 'cancel icon'
        }, children = icon("X", 20))
      ]);
    };
    chosenAccountTemplate = store.current.editAccountName === ""
      ? viewAccountTemplate()
      : editAccountTemplate();
    return react.createElement('div', {
      className: 'choose-account choose-account-2129320115'
    }, children = [chosenAccountTemplate, yourAccount(store, web3t)]);
  };
}).call(this);
