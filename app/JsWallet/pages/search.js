// Generated by LiveScript 1.6.0
(function(){
  var react, reactDom, navigate, getPrimaryInfo, web3, getLang, historyFuncs, icon, switchAccount, epoch, icons, alertDemo, burger, all, dapps, web, images, files, search;
  react = require('react');
  reactDom = require('react-dom');
  navigate = require('../navigate.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  web3 = require('../web3.ls');
  getLang = require('../get-lang.ls');
  historyFuncs = require('../history-funcs.ls');
  icon = require('./icon.ls');
  switchAccount = require('./switch-account.ls');
  epoch = require('./epoch.ls');
  icons = require('../icons.ls');
  alertDemo = require('./alert-demo.ls');
  burger = require('../components/burger.ls');
  all = function(store, web3t){
    var lang, children;
    lang = getLang(store);
    return react.createElement('div', {
      className: 'panel-content'
    }, children = react.createElement('p', {
      className: 'results'
    }, ' ' + lang.underDevelopment));
  };
  dapps = function(store, web3t){
    var lang, goBack, info, style, borderStyle, borderStyle2, borderStyle3, borderRight, buttonPrimary2Style, headerTableStyle, dashedBorder, filterBody, borderB, buttonPrimary1Style, inputStyle, lightText, iconStyle, hideSound, gotoResources, gotoFileStorage, gotoStaking, gotoResources2, gotoChooseStaker, gotoVideostorage, gotoSoundstorage, gotoNotice, gotoWallets, gotoVote, gotoUtil, children;
    lang = getLang(store);
    goBack = historyFuncs(store, web3t).goBack;
    info = getPrimaryInfo(store);
    style = {
      background: info.app.wallet,
      color: info.app.text
    };
    borderStyle = {
      color: info.app.text,
      borderBottom: "1px solid " + info.app.border
    };
    borderStyle2 = {
      color: info.app.text,
      borderBottom: "1px solid " + info.app.border,
      background: "#4b2888"
    };
    borderStyle3 = {
      color: info.app.text,
      borderBottom: "0"
    };
    borderRight = {
      color: info.app.text,
      borderRight: "1px solid " + info.app.border
    };
    buttonPrimary2Style = {
      border: "1px solid " + info.app.primary2,
      color: info.app.text,
      background: info.app.primary2,
      backgroundColor: info.app.primary2Spare
    };
    headerTableStyle = {
      borderBottom: "1px solid " + info.app.border,
      background: info.app.walletLight,
      position: "sticky"
    };
    dashedBorder = {
      borderColor: info.app.border + "",
      color: info.app.color3
    };
    filterBody = {
      border: "1px solid " + info.app.border,
      background: info.app.header
    };
    borderB = {
      borderBottom: "1px solid " + info.app.border
    };
    buttonPrimary1Style = {
      border: "1px solid " + info.app.primary1,
      color: info.app.text,
      background: info.app.primary1,
      backgroundColor: info.app.primary1Spare
    };
    inputStyle = {
      background: info.app.input,
      border: "0",
      color: info.app.text
    };
    lightText = {
      color: info.app.color3
    };
    iconStyle = {
      filter: info.app.nothingIcon
    };
    hideSound = {
      opacity: "0",
      float: "right"
    };
    gotoResources = function(){
      return navigate(store, web3t, 'resources');
    };
    gotoFileStorage = function(){
      return navigate(store, web3t, 'filestorage');
    };
    gotoStaking = function(){
      return navigate(store, web3t, 'staking');
    };
    gotoResources2 = function(){
      return navigate(store, web3t, 'resources2');
    };
    gotoChooseStaker = function(){
      return navigate(store, web3t, 'choosestaker');
    };
    gotoVideostorage = function(){
      return navigate(store, web3t, 'videostorage');
    };
    gotoSoundstorage = function(){
      return navigate(store, web3t, 'soundstorage');
    };
    gotoNotice = function(){
      return navigate(store, web3t, 'notification');
    };
    gotoWallets = function(){
      return navigate(store, web3t, 'offlinewallets');
    };
    gotoVote = function(){
      return navigate(store, web3t, 'vote');
    };
    gotoUtil = function(){
      return navigate(store, web3t, 'util');
    };
    return react.createElement('div', {
      className: 'panel-content'
    }, children = [
      react.createElement('p', {
        className: 'results'
      }, children = [" " + lang.estimatedResults + ":", " 2,000", " (0.30", " " + lang.sec, " )"]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoFileStorage,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' ' + lang.velasSphere), react.createElement('div', {
            className: 'header'
          }, ' ' + lang.storageDapp)
        ]), react.createElement('div', {
          className: 'description'
        }, ' ' + lang.storageDescription), react.createElement('ul', {
          className: 'links'
        }, children = [
          react.createElement('li', {}, children = react.createElement('span', {
            onClick: gotoVideostorage
          }, ' ' + lang.videoStorage)), react.createElement('li', {
            onClick: gotoSoundstorage,
            style: hideSound
          }, children = react.createElement('span', {}, ' Sound Storage'))
        ])
      ]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoResources2,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' ' + lang.velasSphere), react.createElement('div', {
            className: 'header'
          }, ' ' + lang.velasCpuStaking)
        ]), react.createElement('div', {
          className: 'description'
        }), react.createElement('ul', {
          className: 'links'
        }, children = [react.createElement('li', {}, children = react.createElement('span', {}, ' About')), react.createElement('li', {}, children = react.createElement('span', {}, ' FAQs'))])
      ]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoResources,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' ' + lang.velasSphere), react.createElement('div', {
            className: 'header'
          }, ' ' + lang.velasCpu)
        ]), react.createElement('div', {
          className: 'description'
        }, ' ' + lang.cpuDescription), react.createElement('ul', {
          className: 'links'
        }, children = [react.createElement('li', {}, children = react.createElement('span', {}, ' About')), react.createElement('li', {}, children = react.createElement('span', {}, ' FAQs'))])
      ]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoWallets,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' Download Velas Wallets'), react.createElement('div', {
            className: 'header'
          }, ' Velas Wallets')
        ]), react.createElement('div', {
          className: 'description'
        }, ' For mac, windows, ios, android devices')
      ]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoStaking,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' ' + lang.velasBlockchain), react.createElement('div', {
            className: 'header'
          }, ' ' + lang.stakingDapp)
        ]), react.createElement('div', {
          className: 'description'
        }, ' ' + lang.stakingDescription), react.createElement('ul', {
          className: 'links'
        }, children = react.createElement('li', {}, children = react.createElement('span', {
          onClick: gotoChooseStaker
        }, ' ' + lang.delegateStake)))
      ]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoNotice,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' ' + lang.velasSphere), react.createElement('div', {
            className: 'header'
          }, ' ' + lang.velasMessenger)
        ]), react.createElement('div', {
          className: 'description'
        })
      ]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoVote,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' ' + lang.velasSphere), react.createElement('div', {
            className: 'header'
          }, ' Vote')
        ]), react.createElement('div', {
          className: 'description'
        })
      ]), react.createElement('div', {
        className: 'section'
      }, children = [
        react.createElement('div', {
          onClick: gotoUtil,
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' ' + lang.velasSphere), react.createElement('div', {
            className: 'header'
          }, ' Convert VLX2ETH')
        ]), react.createElement('div', {
          className: 'description'
        })
      ]), react.createElement('div', {
        className: 'section developing'
      }, children = [
        react.createElement('div', {
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' wallet.velas.com'), react.createElement('div', {
            className: 'header'
          }, ' Coinrace Dapp | This page is under development.')
        ]), react.createElement('div', {
          className: 'description'
        }, ' Bet on a price of popular cryptocurrencies (BTC, ETH, EOS, ZEC, etc.) and win RACE tokens. The game engine is powered by a set of smart contracts written in ...')
      ]), react.createElement('div', {
        className: 'section developing'
      }, children = [
        react.createElement('div', {
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' wallet.velas.com'), react.createElement('div', {
            className: 'header'
          }, ' DeFi Dapp | This page is under development.')
        ]), react.createElement('div', {
          className: 'description'
        }, ' With many of the playlists we have assembled, the parameters have been clear. To be considered decentralized finance, or DeFi, we can argue endlessly about ...'), react.createElement('ul', {
          className: 'links'
        }, children = [react.createElement('li', {}, children = react.createElement('span', {}, ' Learn More')), react.createElement('li', {}, children = react.createElement('span', {}, ' About DeFi'))])
      ]), react.createElement('div', {
        className: 'section developing'
      }, children = [
        react.createElement('div', {
          className: 'source'
        }, children = [
          react.createElement('div', {
            className: 'address'
          }, ' wallet.velas.com'), react.createElement('div', {
            className: 'header'
          }, ' DEXX Dapp | This page is under development.')
        ]), react.createElement('div', {
          className: 'description'
        }, ' QuikNode provides reliable dedicated endpoints for your Ethereum applications. Geth & Parity. Full & Archive Nodes. HTTP & WebSocket Support. Fast RPC. 8 Locations. Types: MainNet (ETH), Classic (ETC), Kovan/Ropsten/Rinkeby.'), react.createElement('ul', {
          className: 'links'
        }, children = [react.createElement('li', {}, children = react.createElement('span', {}, ' About')), react.createElement('li', {}, children = react.createElement('span', {}, ' FAQs'))])
      ])
    ]);
  };
  web = function(store, web3t){
    var lang, children;
    lang = getLang(store);
    return react.createElement('div', {
      className: 'panel-content'
    }, children = react.createElement('p', {
      className: 'results'
    }, ' ' + lang.underDevelopment));
  };
  images = function(store, web3t){
    var lang, children;
    lang = getLang(store);
    return react.createElement('div', {
      className: 'panel-content'
    }, children = react.createElement('p', {
      className: 'results'
    }, ' ' + lang.underDevelopment));
  };
  files = function(store, web3t){
    var lang, children;
    lang = getLang(store);
    return react.createElement('div', {
      className: 'panel-content'
    }, children = react.createElement('p', {
      className: 'results'
    }, ' ' + lang.underDevelopment));
  };
  search = function(arg$){
    var store, web3t, lang, goBack, info, style, borderStyle, borderStyle3, borderRight, buttonPrimary2Style, headerTableStyle, dashedBorder, filterBody, borderB, buttonPrimary1Style, inputStyle, lightText, iconStyle, activate, activateAll, activateDapps, activateWeb, activateImages, activateFiles, activeClass, activeAll, activeDapps, activeWeb, activeImages, activeFiles, showClass, children;
    store = arg$.store, web3t = arg$.web3t;
    lang = getLang(store);
    goBack = historyFuncs(store, web3t).goBack;
    info = getPrimaryInfo(store);
    style = {
      background: info.app.wallet,
      color: info.app.text
    };
    borderStyle = {
      color: info.app.text,
      borderBottom: "1px solid " + info.app.border,
      background: info.app.background,
      backgroundColor: info.app.bgspare
    };
    borderStyle3 = {
      color: info.app.text,
      borderBottom: "0",
      background: info.app.background,
      backgroundColor: info.app.bgspare
    };
    borderRight = {
      color: info.app.text,
      borderRight: "1px solid " + info.app.border
    };
    buttonPrimary2Style = {
      border: "1px solid " + info.app.primary2,
      color: info.app.text,
      background: info.app.primary2,
      backgroundColor: info.app.primary2Spare
    };
    headerTableStyle = {
      borderBottom: "1px solid " + info.app.border,
      background: info.app.walletLight,
      position: "sticky"
    };
    dashedBorder = {
      borderColor: info.app.border + "",
      color: info.app.color3
    };
    filterBody = {
      border: "1px solid " + info.app.border,
      background: info.app.header
    };
    borderB = {
      borderBottom: "1px solid " + info.app.border
    };
    buttonPrimary1Style = {
      border: "1px solid " + info.app.primary1,
      color: info.app.text,
      background: info.app.primary1,
      backgroundColor: info.app.primary1Spare
    };
    inputStyle = {
      background: info.app.input,
      border: "0",
      color: info.app.text
    };
    lightText = {
      color: info.app.color3
    };
    iconStyle = {
      filter: info.app.nothingIcon
    };
    activate = function(tab){
      return function(){
        return store.search.tab = tab;
      };
    };
    activateAll = activate('all');
    activateDapps = activate('dapps');
    activateWeb = activate('web');
    activateImages = activate('images');
    activateFiles = activate('files');
    activeClass = function(tab){
      if (store.search.tab === tab) {
        return 'active';
      } else {
        return '';
      }
    };
    activeAll = activeClass('all');
    activeDapps = activeClass('dapps');
    activeWeb = activeClass('web');
    activeImages = activeClass('images');
    activeFiles = activeClass('files');
    showClass = store.current.openMenu ? 'hide' : "";
    return react.createElement('div', {
      className: 'search search-1018737767'
    }, children = [
      alertDemo(store, web3t), react.createElement('div', {
        style: borderStyle,
        className: 'title'
      }, children = [
        react.createElement('div', {
          className: showClass + " header"
        }, ' ' + lang.search), react.createElement('div', {
          onClick: goBack,
          className: 'close'
        }, children = react.createElement('img', {
          src: icons.arrowLeft + "",
          className: 'icon-svg'
        })), burger(store, web3t), epoch(store, web3t), switchAccount(store, web3t)
      ]), react.createElement('div', {
        className: 'search-input'
      }, children = [
        react.createElement('div', {
          style: borderStyle3,
          className: 'section'
        }, children = [
          react.createElement('div', {
            className: 'title'
          }, children = react.createElement('h2', {
            className: 'iron'
          }, ' Voogle')), react.createElement('div', {
            className: 'description search-field'
          }, children = react.createElement('div', {
            className: 'left'
          }, children = [
            react.createElement('input', {
              type: 'text',
              style: inputStyle,
              value: "dapps",
              placeholder: "dapps"
            }), react.createElement('div', {
              className: 'icon'
            }, children = icon('Search', 15))
          ]))
        ]), react.createElement('div', {
          style: borderStyle,
          className: 'section filter'
        }, children = [
          react.createElement('div', {
            className: 'title'
          }), react.createElement('div', {
            className: 'description tabs'
          }, children = react.createElement('ul', {}, children = [
            react.createElement('li', {
              onClick: activateAll,
              className: activeAll + ""
            }, children = [
              react.createElement('span', {
                className: 'icon'
              }, children = icon('Search', 15)), react.createElement('span', {}, ' ' + lang.all)
            ]), react.createElement('li', {
              onClick: activateDapps,
              className: activeDapps + ""
            }, children = [
              react.createElement('span', {
                className: 'icon'
              }, children = icon('Rocket', 15)), react.createElement('span', {}, ' ' + lang.dapps)
            ]), react.createElement('li', {
              onClick: activateWeb,
              className: activeWeb + ""
            }, children = [
              react.createElement('span', {
                className: 'icon'
              }, children = icon('Globe', 15)), react.createElement('span', {}, ' ' + lang.web)
            ]), react.createElement('li', {
              onClick: activateImages,
              className: activeImages + ""
            }, children = [
              react.createElement('span', {
                className: 'icon'
              }, children = icon('FileMedia', 15)), react.createElement('span', {}, ' ' + lang.images)
            ]), react.createElement('li', {
              onClick: activateFiles,
              className: activeFiles + ""
            }, children = [
              react.createElement('span', {
                className: 'icon'
              }, children = icon('FileDirectory', 15)), react.createElement('span', {}, ' ' + lang.publicFiles)
            ])
          ]))
        ])
      ]), react.createElement('div', {
        className: 'wrapper'
      }, children = [
        activeAll === 'active' ? all(store, web3t) : void 8, activeDapps === 'active' ? dapps(store, web3t) : void 8, activeWeb === 'active' ? web(store, web3t) : void 8, activeImages === 'active' ? images(store, web3t) : void 8, activeFiles === 'active' ? files(store, web3t) : void 8, react.createElement('div', {
          className: 'store-content'
        })
      ])
    ]);
  };
  module.exports = search;
}).call(this);
