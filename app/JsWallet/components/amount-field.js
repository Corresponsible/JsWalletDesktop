// Generated by LiveScript 1.6.0
(function(){
  var react, getPrimaryInfo, round5, round, find, times, keyboard, toString$ = {}.toString;
  react = require('react');
  getPrimaryInfo = require('../get-primary-info.ls');
  round5 = require('../round5.ls');
  round = require('../round.ls');
  find = require('prelude-ls').find;
  times = require('../math.ls').times;
  keyboard = require('./keyboard.ls');
  module.exports = function(arg$){
    var store, value, onChange, placeholder, style, inputStyle, current, wallets, wallet, valueVlx, usd, eur, actualPlaceholder, normalize, getNumber, onChangeInternal, children;
    store = arg$.store, value = arg$.value, onChange = arg$.onChange, placeholder = arg$.placeholder;
    style = getPrimaryInfo(store);
    inputStyle = {
      background: style.app.input,
      color: style.app.text,
      overflowX: 'auto'
    };
    current = {
      ref: null
    };
    wallets = store.current.account.wallets;
    wallet = find(function(it){
      return it.coin.token === 'vlx2';
    })(
    wallets);
    valueVlx = value != null ? value : 0;
    usd = (function(){
      switch (false) {
      case wallet.usdRate == null:
        return times(valueVlx, wallet.usdRate);
      default:
        return "..";
      }
    }());
    eur = (function(){
      switch (false) {
      case wallet.eurRate == null:
        return times(valueVlx, wallet.eurRate);
      default:
        return "..";
      }
    }());
    actualPlaceholder = placeholder != null ? placeholder : "";
    normalize = function(it){
      var ref$, first, ref1$, second;
      if (it == null) {
        return '0';
      }
      if (it.indexOf('.') === -1) {
        return parseInt(it);
      }
      if (it.substr(it.length - 1, 1) === ".") {
        return parseInt(it) + ".";
      }
      ref$ = it.split('.'), first = (ref1$ = ref$[0]) != null ? ref1$ : '0', second = (ref1$ = ref$[1]) != null ? ref1$ : '0';
      return parseInt(first) + "." + second;
    };
    getNumber = function(value){
      var ref$;
      switch (false) {
      case value !== "":
        return '0';
      case (ref$ = toString$.call(value).slice(8, -1)) === 'String' || ref$ === 'Number':
        return '0';
      default:
        return normalize((ref$ = value.match(/\d+(\.)?(\d{1,})?/)) != null ? ref$[0] : void 8);
      }
    };
    onChangeInternal = function(it){
      var value, ref$;
      value = getNumber((ref$ = it.target) != null ? ref$.value : void 8);
      return onChange({
        target: {
          value: value
        }
      });
    };
    return react.createElement('div', {
      className: 'input-area input-area751300995'
    }, children = [
      react.createElement('input', {
        type: "text",
        value: valueVlx + "",
        style: inputStyle,
        onChange: onChangeInternal,
        placeholder: actualPlaceholder
      }), react.createElement('span', {
        style: inputStyle,
        className: 'suffix'
      }, children = [
        react.createElement('img', {
          src: wallet.coin.image + "",
          className: 'icon'
        }), react.createElement('span', {}, ' VLX2')
      ]), react.createElement('div', {
        className: 'show-details'
      }, children = react.createElement('div', {
        className: 'panel'
      }, children = [react.createElement('div', {}, ' USD: ' + round(usd)), react.createElement('div', {}, ' EUR: ' + round(eur))]))
    ]);
  };
}).call(this);
