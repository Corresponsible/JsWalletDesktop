// Generated by LiveScript 1.6.0
(function(){
  var react, icons, getPrimaryInfo, getLang, buttonLoading, getButtonStyle, buttonActive, component;
  react = require('react');
  icons = require('../icons.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  getLang = require('../get-lang.ls');
  buttonLoading = function(arg$){
    var store, text, loading, onClick, icon, type, style, lang, buttonStyle, children;
    store = arg$.store, text = arg$.text, loading = arg$.loading, onClick = arg$.onClick, icon = arg$.icon, type = arg$.type;
    style = getPrimaryInfo(store);
    lang = getLang(store);
    buttonStyle = getButtonStyle(store, type);
    return react.createElement('button', {
      style: buttonStyle,
      className: 'btn btn-primary loading btn-901042885'
    }, children = react.createElement('span', {}, ' ...'));
  };
  getButtonStyle = function(store, type){
    var style, buttonPrimary1Style, buttonPrimary3Style, buttonPrimary2Style, buttonStyle;
    style = getPrimaryInfo(store);
    buttonPrimary1Style = {
      border: "0",
      color: style.app.text,
      background: style.app.primary1,
      backgroundColor: style.app.primary1Spare
    };
    buttonPrimary3Style = {
      border: "0",
      color: style.app.text2,
      background: style.app.primary3,
      backgroundColor: style.app.primary3Spare
    };
    buttonPrimary2Style = {
      border: "0",
      color: style.app.text,
      background: style.app.primary2,
      backgroundColor: style.app.primary2Spare
    };
    buttonStyle = (function(){
      switch (false) {
      case type !== 'primary':
        return buttonPrimary1Style;
      case type !== 'secondary':
        return buttonPrimary2Style;
      default:
        return buttonPrimary3Style;
      }
    }());
    return buttonStyle;
  };
  buttonActive = function(arg$){
    var store, text, loading, onClick, icon, type, lang, appliedText, ref$, appliedIcon, buttonStyle, children;
    store = arg$.store, text = arg$.text, loading = arg$.loading, onClick = arg$.onClick, icon = arg$.icon, type = arg$.type;
    lang = getLang(store);
    appliedText = (ref$ = lang[text]) != null
      ? ref$
      : text != null ? text : "";
    appliedIcon = (ref$ = icons[icon != null ? icon : text]) != null
      ? ref$
      : icons.more;
    buttonStyle = getButtonStyle(store, type);
    return react.createElement('button', {
      onClick: onClick,
      style: buttonStyle,
      className: 'btn btn-901042885'
    }, children = store.current.device === 'mobile'
      ? react.createElement('img', {
        src: appliedIcon + "",
        title: appliedText + "",
        className: 'icon-svg'
      })
      : react.createElement('span', {}, children = [
        react.createElement('img', {
          src: appliedIcon + "",
          className: 'icon-svg'
        }), react.createElement('span', {}, ' ' + appliedText)
      ]));
  };
  component = function(config){
    if (config.loading === true) {
      return buttonLoading(config);
    }
    return buttonActive(config);
  };
  module.exports = component;
}).call(this);
