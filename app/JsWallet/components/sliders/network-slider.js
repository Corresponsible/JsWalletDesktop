// Generated by LiveScript 1.6.0
(function(){
  var react, getPrimaryInfo, round5, round, ref$, find, filter, objToPairs, pairsToObj, map, times, icon, icons, tokenNetworks;
  react = require('react');
  getPrimaryInfo = require('../../get-primary-info.js');
  round5 = require('../../round5.js');
  round = require('../../round.js');
  ref$ = require('prelude-ls'), find = ref$.find, filter = ref$.filter, objToPairs = ref$.objToPairs, pairsToObj = ref$.pairsToObj, map = ref$.map;
  times = require('../../math.js').times;
  icon = require('../../icon.js');
  icons = require('../../icons.js');
  tokenNetworks = require('../../swaping/networks.js');
  module.exports = function(arg$){
    var web3t, wallet, store, id, wallets, availableNetworks, networkLabels, getNetworkById, style, style2, inputStyle2, buttonPrimary2Style, displayValue, go, goback, goForw, children;
    web3t = arg$.web3t, wallet = arg$.wallet, store = arg$.store, id = arg$.id;
    if (wallet.network.networks == null) {
      return null;
    }
    if (!(store.current.send.swap != null && store.current.send.swap === true)) {
      return null;
    }
    if (wallet.network.networks == null || Object.keys(wallet.network.networks).length === 0) {
      return null;
    }
    wallets = pairsToObj(
    map(function(it){
      return [it.coin.token, it];
    })(
    store.current.account.wallets));
    availableNetworks = pairsToObj(
    filter(function(it){
      return wallets[it[1].referTo] != null && (it[1].disabled == null || it[1].disabled === false);
    })(
    objToPairs(
    wallet.network.networks)));
    networkLabels = Object.keys(availableNetworks);
    getNetworkById = function(id){
      return availableNetworks[id + ""];
    };
    style = getPrimaryInfo(store);
    style2 = {
      color: style.app.icon + ""
    };
    inputStyle2 = {
      background: style.app.input,
      color: style.app.text,
      border: "0"
    };
    buttonPrimary2Style = {
      border: "1px solid " + style.app.wallet,
      color: style.app.text,
      background: style.app.primary2,
      backgroundColor: style.app.primary2Spare
    };
    displayValue = store.current.send.chosenNetwork.name.toUpperCase();
    go = function(inc){
      return function(){
        var current, lenght, index, chosenNetworkId;
        current = networkLabels.indexOf(store.current.send.chosenNetwork.id);
        lenght = networkLabels.length;
        index = current + inc;
        if (current + inc >= lenght) {
          index = 0;
        } else if (current + inc < 0) {
          index = lenght - 1;
        }
        chosenNetworkId = networkLabels[index];
        store.current.send.chosenNetwork = getNetworkById(chosenNetworkId);
        store.current.send.to = tokenNetworks.getDefaultRecipientAddress(store);
        store.current.send.error = '';
        return store.current.send.data = null;
      };
    };
    goback = go(-1);
    goForw = go(1);
    return react.createElement('div', {
      className: 'network-slider network-slider506029290'
    }, children = [
      react.createElement('label', {
        style: style2,
        className: 'control-label'
      }, ' Choose Network'), react.createElement('div', {}, children = [
        react.createElement('span', {
          onClick: goback,
          style: buttonPrimary2Style,
          className: 'button navigation-button left'
        }, children = react.createElement('div', {
          className: 'button-inner'
        }, children = react.createElement('img', {
          src: icons.arrowLeft + "",
          className: 'icon-svg'
        }))), react.createElement('span', {
          className: 'bold'
        }, children = react.createElement('input', {
          value: displayValue + "",
          style: inputStyle2,
          disabled: true,
          className: 'change-network'
        })), react.createElement('span', {
          onClick: goForw,
          style: buttonPrimary2Style,
          className: 'button navigation-button right'
        }, children = react.createElement('div', {
          className: 'button-inner'
        }, children = react.createElement('img', {
          src: icons.arrowRight + "",
          className: 'icon-svg'
        })))
      ])
    ]);
  };
}).call(this);
